# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      ? linux_64_CLANG_VERSION16.0.6CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_main
      : CONFIG: linux_64_CLANG_VERSION16.0.6CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_main
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION16.0.6CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_main
      : CONFIG: linux_64_CLANG_VERSION16.0.6CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_main
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION17.0.6CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_main
      : CONFIG: linux_64_CLANG_VERSION17.0.6CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_main
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION17.0.6CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_main
      : CONFIG: linux_64_CLANG_VERSION17.0.6CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_main
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION18.1.8CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_main
      : CONFIG: linux_64_CLANG_VERSION18.1.8CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_main
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION18.1.8CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_main
      : CONFIG: linux_64_CLANG_VERSION18.1.8CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_main
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION19.1.0.rc2CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_llvm_rc
      : CONFIG: linux_64_CLANG_VERSION19.1.0.rc2CL_VERSION19.29.30139MSVC_HEADERS_VERSION14.29.30133TOOLCHAIN_COMBINED14.29.16.11VCVER14.2channel_targetsconda-forge_llvm_rc
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
      ? linux_64_CLANG_VERSION19.1.0.rc2CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_llvm_rc
      : CONFIG: linux_64_CLANG_VERSION19.1.0.rc2CL_VERSION19.40.33808MSVC_HEADERS_VERSION14.40.33807TOOLCHAIN_COMBINED14.40.17.10VCVER14.3channel_targetsconda-forge_llvm_rc
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cos7-x86_64
  timeoutInMinutes: 360
  variables: {}

  steps:
  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
        export remote_url=$(Build.Repository.Uri)
        export sha=$(Build.SourceVersion)
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)